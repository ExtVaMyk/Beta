OBJECT Codeunit 84999 ForNAV Test
{
  OBJECT-PROPERTIES
  {
    Date=24-03-17;
    Time=08:56:33;
    Modified=Yes;
    Version List=FORNAVBETA;
  }
  PROPERTIES
  {
    Subtype=Test;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [Test]
    PROCEDURE TestDiscountForDocument@1000000000();
    VAR
      SalesHeader@1000000001 : Record 36;
      SalesLine@1000000000 : Record 37;
      ForNAVCheckDocumentDiscount@1000000002 : Codeunit 84000;
    BEGIN
      // IF SalesHeader.FINDSET THEN REPEAT
      //  SalesLine.SETRANGE("Document No.", SalesHeader."No.");
      //  SalesLine.SETRANGE("Document Type", SalesHeader."Document Type");
      //  SalesLine.SETFILTER("Line Discount %", '<>0');
      //  IF SalesLine.ISEMPTY THEN BEGIN
      //    IF ForNAVCheckDocumentDiscount.HasDiscount(SalesHeader) THEN
      //      ERROR('No Discount expected for record ' + FORMAT(SalesHeader));
      //  END ELSE BEGIN
      //    IF NOT ForNAVCheckDocumentDiscount.HasDiscount(SalesHeader) THEN
      //      ERROR('Discount expected for record ' + FORMAT(SalesHeader));
      //  END;
      // UNTIL SalesHeader.NEXT = 0;
    END;

    [Test]
    PROCEDURE TestCreateVATAmoutLine@1000000001();
    VAR
      SalesHeader@1000000001 : Record 36;
      SalesInvoiceHeader@1000000003 : Record 112;
      VATAmountLine@1000000000 : TEMPORARY Record 290;
      ForNAVGetVatAmountLines@1000000002 : Codeunit 84001;
    BEGIN
      IF SalesHeader.FINDSET THEN REPEAT
        ForNAVGetVatAmountLines.GetVatAmountLines(SalesHeader, VATAmountLine);
      UNTIL SalesHeader.NEXT = 0;

      IF SalesInvoiceHeader.FINDSET THEN REPEAT
        ForNAVGetVatAmountLines.GetVatAmountLines(SalesInvoiceHeader, VATAmountLine);
      UNTIL SalesInvoiceHeader.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

