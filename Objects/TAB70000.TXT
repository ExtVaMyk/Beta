OBJECT Table 70000 ForNAV Setup
{
  OBJECT-PROPERTIES
  {
    Date=20-07-17;
    Time=20:02:29;
    Modified=Yes;
    Version List=FORNAVCTP5;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10         }
    { 9   ;   ;Localization        ;Option        ;OnValidate=BEGIN
                                                                IF Localization = Localization::"North America" THEN
                                                                  "VAT Amount Specification" := "VAT Amount Specification"::"N/A. (Sales Tax)";
                                                              END;

                                                   OptionString=World Wide,North America,Other }
    { 10  ;   ;VAT Amount Specification;Option    ;OptionString=Multiple Lines,Always,Never,N/A. (Sales Tax) }
    { 60  ;   ;Watermark           ;BLOB           }
    { 70  ;   ;Payment Note        ;Text250        }
    { 80  ;   ;Legal Conditions    ;Text250        }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InitSetup@1000000000();
    BEGIN
      IF GET THEN
        EXIT;

      INIT;
      INSERT;
    END;

    PROCEDURE ReplaceReportSelection@1(HideDialog@1000 : Boolean);
    VAR
      DoYouWantToQst@1001 : TextConst 'ENU=Do you want to replace the current reports with the ForNAV reports?';
      ReplaceReportSel@1002 : Codeunit 70029;
    BEGIN
      IF NOT HideDialog THEN
        IF NOT CONFIRM(DoYouWantToQst, TRUE) THEN
          EXIT;

      ReplaceReportSel.RUN;
    END;

    PROCEDURE RunTest@2();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"ForNAV Test Runner");
    END;

    PROCEDURE DesignTemplate@1000000003();
    VAR
      Template@1000 : Report 70527;
    BEGIN
      Template.RUNMODAL;
    END;

    PROCEDURE DesignSalesTemplate@3();
    VAR
      SalesTemplate@1000 : Report 70529;
    BEGIN
      SalesTemplate.RUNMODAL;
    END;

    PROCEDURE DesignPurchaseTemplate@1000000001();
    VAR
      PurchaseTemplate@1000 : Report 70528;
    BEGIN
      PurchaseTemplate.RUNMODAL;
    END;

    PROCEDURE ImportWatermarkFromClientFile@21() : Boolean;
    VAR
      TempBlob@1000000001 : TEMPORARY Record 99008535;
      FileMgt@1000000000 : Codeunit 419;
      FileName@1001 : Text;
    BEGIN
      FileName := FileMgt.BLOBImport(TempBlob,'');

      IF FileName <> '' THEN BEGIN
        Watermark := TempBlob.Blob;
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE GetLegalConditions@1000000002(LanguageCode@1000000001 : Code[10]) : Text;
    VAR
      LegalCondTranslation@1000000000 : Record 70001;
    BEGIN
      IF LegalCondTranslation.GET(LanguageCode) THEN
        EXIT(LegalCondTranslation."Legal Conditions");

      EXIT("Legal Conditions");
    END;

    PROCEDURE CheckLocalizationBasedOnTables@5();
    VAR
      DetectLocalization@1001 : Codeunit 70005;
    BEGIN
      DetectLocalization.CheckLocalizationBasedOnTables(Rec);
    END;

    PROCEDURE ValidateCurrentLocalization@4() : Boolean;
    VAR
      DetectLocalization@1001 : Codeunit 70005;
    BEGIN
      EXIT(DetectLocalization.ValidateCurrentLocalization(Rec));
    END;

    BEGIN
    {
      Copyright (c) 2017 ForNAV ApS - All Rights Reserved
      The intellectual work and technical concepts contained in this file are proprietary to ForNAV.
      Unauthorized reverse engineering, distribution or copying of this file, parts hereof, or derived work, via any medium is strictly prohibited without written permission from ForNAV ApS.
      This source code is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    }
    END.
  }
}

